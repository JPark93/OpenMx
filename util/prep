#!/bin/sh

set -o errexit
set -o nounset

flavor=$1
for=$2
gpu=${3:-no}

case "$flavor" in
  npsol)
    echo "* NPSOL build selected"
    LICENSE='Apache License (== 2.0)'
    ;;
  cran)
    echo "* CRAN build selected"
    LICENSE='Apache License (== 2.0)'
    ;;
  *)
    echo "$0: build flavor '$flavor' unrecognized (try 'npsol' or 'cran')"
    exit 1
    ;;
esac

case "$for" in
  install)
    BC="no"
    ;;
  build)
    BC="yes"
    ;;
  *)
    echo "$0: build for '$for' unrecognized (try 'install' or 'build')"
    exit 1
    ;;
esac

VERSION=$(sh ./inst/tools/findBuildNum.sh)
AUTHORS=$(cat DESCRIPTION.in | perl -0pe 's,\n\s+, ,sg' |grep '^Author' | cut -d ':' -f 2)
DATE=$(git log -n 1 --date=short --format=%cd)
YEAR=$(echo $DATE | cut -d '-' -f 1)

cat DESCRIPTION.in | sed -e "s/@VERSION@/$VERSION/" -e "s/@DATE@/$DATE/" -e "s/@LICENSE@/$LICENSE/" -e "s/@BC@/$BC/" > DESCRIPTION
cat inst/CITATION.in | sed -e "s/@VERSION@/$VERSION/" -e "s/@YEAR@/$YEAR/" -e "s/@AUTHORS@/$AUTHORS/" > inst/CITATION

mxV=R/MxVersion.R
sed -e s/GIT_VERSION/$(git describe --dirty)/ $mxV.in > $mxV

if [ ! -e src/omxSymbolTable.h -o \
     src/omxSymbolTable.h -ot util/omxSymbolTable.tab -o \
     src/omxSymbolTable.h -ot util/genSymbolTableHeader.R ]; then
  echo "* Generating src/omxSymbolTable.h"
  ${REXEC:-R} --slave --vanilla -f util/genSymbolTableHeader.R  > src/omxSymbolTable.h
fi

if [ ! -e src/omxSymbolTable.cpp -o \
     src/omxSymbolTable.cpp -ot util/omxSymbolTable.tab -o \
     src/omxSymbolTable.cpp -ot util/genSymbolTableSource.R ]; then
  echo "* Generating src/omxSymbolTable.cpp"
  ${REXEC:-R} --slave --vanilla -f util/genSymbolTableSource.R  > src/omxSymbolTable.cpp
fi

if [ ! -e R/sysdata.rda -o \
     R/sysdata.rda -ot util/omxSymbolTable.tab -o \
     R/sysdata.rda -ot util/copySymbolTable.R ]; then
  echo "* Generating R/sysdata.rda"
  ${REXEC:-R} --slave --vanilla -f util/copySymbolTable.R
fi

if [ $flavor = npsol ]; then
  rm -f inst/no-npsol
  echo 'NPSOL_DIR= "..\inst"' > src/Makevars.win.new
  echo 'NPSOL=-lnpsol$(WIN) -L$(NPSOL_DIR)' >> src/Makevars.win.new
  echo 'NPSOL_LIBS=$(NPSOL)' >> src/Makevars.win.new
  cat src/Makevars.win.in >> src/Makevars.win.new
  if [ ! -e src/npsolswitch.h ] || ! grep -q 1 src/npsolswitch.h; then echo '#define HAS_NPSOL 1' > src/npsolswitch.h; fi
  grep -E -v '(inst/npsol|configure.win)' .Rbuildignore.in > .Rbuildignore
  if [ -e src/OpenMx.so -a src/libnpsol.a -nt src/OpenMx.so ]; then
	 echo "rm src/OpenMx.so  # new libnpsol.a detected"
	 rm -f src/OpenMx.so
  fi
else
  touch inst/no-npsol
  if [ ! -e src/npsolswitch.h ] || ! grep -q 0 src/npsolswitch.h; then echo '#define HAS_NPSOL 0' > src/npsolswitch.h; fi
  echo 'NPSOL_LIBS=' > src/Makevars.win.new
  cat src/Makevars.win.in >> src/Makevars.win.new
  cp .Rbuildignore.in .Rbuildignore
fi

if [ $gpu = include-cuda ]; then
  echo "TODO: Update Marevars.win.new with NVCC environment variables"
  if [ ! -e src/cudaswitch.h ] || ! grep -q 1 src/cudaswitch.h; then
    echo '#define HAS_CUDA 1' > src/cudaswitch.h;
  fi
else
  if [ ! -e src/cudaswitch.h ] || ! grep -q 0 src/cudaswitch.h; then
    echo '#define HAS_CUDA 0' > src/cudaswitch.h; 
  fi
fi

if [ -e src/Makevars.win ] && cmp -s src/Makevars.win.new src/Makevars.win ; then
    echo "src/Makevars.win unchanged"
    rm -f src/Makevars.win.new
else
    mv src/Makevars.win.new src/Makevars.win
fi

if ! grep -q 'Generated by roxygen2' man/*.Rd && [ "$for" = build ]; then
  sh ./util/rox
fi
