#!/bin/bash

set -o errexit

export _R_CHECK_FORCE_SUGGESTS_=false
export OMP_NUM_THREADS=2

fold_start() {
  echo -e "travis_fold:start:$1\033[33;1m$2\033[0m"
}

fold_end() {
  echo -e "\ntravis_fold:end:$1\r"
}

travis_wait() {
    # https://github.com/travis-ci/travis-ci/issues/4190#issuecomment-169987525
    local minutes=0
    local limit=40
    while kill -0 $! >/dev/null 2>&1; do
	echo -n -e " \b" # never leave evidences!
	if [ $minutes == $limit ]; then break; fi
	local minutes=$((minutes+1))
	sleep 60
    done
    wait $! || exit 1
}

#echo "IMX_OPT_ENGINE=$IMX_OPT_ENGINE"
#echo "TRAVIS_EVENT_TYPE=$TRAVIS_EVENT_TYPE"

if [ "x$TRAVIS_OS_NAME" = xlinux ]; then
    if [ "x$MODE" = xtest ]; then
	fold_start make.install "make install"
	make install
	fold_end make.install
    fi

    if [ "x$MODE" = xtest ]; then
	make test
    elif [ "x$MODE" = xcran-check ]; then
	make cran-check &
	travis_wait
    elif [ "x$MODE" = xcovr ]; then
	./util/prep cran install
	${REXEC:-R} --vanilla --no-readline <<EOF &
library(devtools)
devtools::install_github("jpritikin/covr")
library(covr)
library(roxygen2)
options(covr.gcov = "gcov-8")
withr::with_envvar(c(MAKE="make -j2"), {
  withr::with_makevars(getOption("covr.flags"), assignment = "+=", {
    utils::install.packages(
      ".", repos = NULL, type = "source",
      INSTALL_opts = c("--example",  "--install-tests", "--with-keep.source",
        "--with-keep.parse.data", "--no-multiarch")
    )
  })
})
roxygenize('.', roclets=c('rd'))
c1 <- covr::package_coverage(type=c("tests","examples"), quiet=TRUE, pre_clean=FALSE)
pl <- covr:::per_line(c1)
print(t(sapply(pl, function(x) c(total=length(x$coverage),
                         possible=sum(!is.na(x$coverage)),
                         covered=sum(!is.na(x$coverage) & x$coverage > 0)))))
pct <- percent_coverage(c1, by="expression")
print(pct)
pct <- percent_coverage(c1, by="line")
print(pct)
if (pct < .46) {
  print(paste("Coverage dropped to", pct))
  q(status=1)
}
covr::codecov(coverage = c1)
EOF
	travis_wait
    fi
elif [ "x$TRAVIS_OS_NAME" = xosx ]; then
    if [ "x$MODE" = xbuild ]; then
	git fetch --unshallow  # need tags to compute version string
	make build
	pushd build && tar zxf OpenMx_*.tgz && popd
	pushd build/OpenMx/libs && ../../../util/libtastic.py -r -id OpenMx.so /usr/local/ && popd
	pushd build && tar zcf OpenMx_*.tgz OpenMx && popd
    fi
fi
